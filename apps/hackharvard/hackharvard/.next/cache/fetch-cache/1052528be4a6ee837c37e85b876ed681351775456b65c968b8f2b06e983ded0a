{"kind":"FETCH","data":{"headers":{"cache-control":"max-age=0, private, must-revalidate","connection":"keep-alive","content-encoding":"gzip","content-type":"text/html; charset=utf-8","date":"Sat, 21 Oct 2023 03:10:43 GMT","server":"nginx/1.6.2","set-cookie":"_devpost=Tm1PTkg2MzRRL0ZnRTcrazBhdlZycXkxTDZvdS9mSkltcXhDVXZRcUZVY2psUFNtcGhjYk1RaHpzbkpjaUE5WU90TitrcXBwandSbURHbkJrRDFkWnhXYkZpc3A0aHFKUStUeVNYT1c0Z25jWFM1YjNrMkZTYTBMNXhjTTJ6REg4NytUSk9UNlZYWUhudkc4Vmw4UU5uNjFldTVCUGlVdGQzaGZsRjlGd0M0cGVWdzZtT1dncmx1eHExdkpYaE1JWFJuRm9ta1d3RWhnOHlMMXBPdElyZ3NuM3IrLzNwejgrZnJrZEx6ZldzUlhIM3NCWWFRKzdVY0wzVmxxa3JERFZDdVZjMFptTnMwQ2xWbmF5eGl0dGtSdmVjS3dkZ2toeWYxbzM4KzhiUlkza3BnL0I5T3BwNVF3LzBqT1RUN1h2Um1aUFF5WlBkNkw3RnR6RXVTeERpak5vUHArcEUyUkx6cC9WTndXOFJxN3d0TW02K2VidkRNaDJwdXRPWUpkS0ZobDJ2MFNZdzAwd0JlSzFxNHgySnJzZTRzZkJGRHFMTk9zN08yeVlmWT0tLUJMa0VHM2o5UGhBa0hLWVJPNkZ5WXc9PQ%3D%3D--d1065734a041967166a0e6fd45fd470ebabbc66f; domain=.devpost.com; path=/; secure; HttpOnly","status":"200 OK","strict-transport-security":"max-age=63072000; includeSubDomains; preload","transfer-encoding":"chunked","vary":"Origin","x-content-type-options":"nosniff, nosniff","x-frame-options":"SAMEORIGIN","x-request-id":"1e08c58f-a860-4b49-9726-75d9d2e14c60","x-runtime":"0.127973","x-xss-protection":"1; mode=block"},"body":"","status":200,"url":"https://devpost.com/software/balladeer"},"revalidate":31536000,"tags":[]}